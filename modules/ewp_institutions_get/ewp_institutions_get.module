<?php

/**
 * @file
 * Contains ewp_institutions_get.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\ewp_institutions_get\InstitutionManager;

/**
 * Implements hook_help().
 */
function ewp_institutions_get_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ewp_institutions_get module.
    case 'help.page.ewp_institutions_get':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Populate EWP Institution entities with data from an external API') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_type_build().
 *
 * Adds new forms and links to the Institution entity.
 */
function ewp_institutions_get_entity_type_build(array &$entity_types) {

  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $entity_types[InstitutionManager::ENTITY_TYPE]
    ->setFormClass('import', 'Drupal\\ewp_institutions_get\\Form\\InstitutionEntityImportForm')
    ->setFormClass('update', 'Drupal\\ewp_institutions_get\\Form\\InstitutionEntityUpdateForm')
    ->setLinkTemplate('import-form', '/ewp/hei/import/{index_key}/{hei_key}')
    ->setLinkTemplate('update-form', '/ewp/hei/{hei}/update');
}

/**
 * Implements hook_base_field_info().
 *
 * Adds new base field to the Institution entity for the API index key.
 */
function ewp_institutions_get_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === InstitutionManager::ENTITY_TYPE) {
    $fields[InstitutionManager::INDEX_FIELD] = BaseFieldDefinition::create('string')
      ->setLabel(t('API index key'))
      ->setDisplayOptions('form', [
        'type' => 'textfield',
        'weight' => 100,
      ])
      ->setDisplayConfigurable('form', TRUE);
    return $fields;
  }
}

/**
 * Implements hook_form_alter().
 */
function ewp_institutions_get_form_alter(&$form, FormStateInterface $form_state) {
  // dpm($form);
}

/**
 * Implements hook_field_widget_multivalue_WIDGET_TYPE_form_alter().
 */
function ewp_institutions_get_field_widget_multivalue_entity_reference_autocomplete_form_alter(array &$elements, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {
  $target_type = $elements[0]['target_id']['#target_type'];
  $selection_settings = $elements[0]['target_id']['#selection_settings'];
  $auto_create = (array_key_exists('auto_create', $selection_settings)) ? $selection_settings['auto_create'] : FALSE ;

  if ($target_type === InstitutionManager::ENTITY_TYPE && $auto_create) {
    foreach ($elements as $key => $value) {
      if (is_numeric($key)) {
        // Unset the auto create ability via the normal form element.
        $elements[$key]['target_id']['#selection_settings']['auto_create'] = FALSE;
        unset($elements[$key]['target_id']['#autocreate']);
      }
    }

    // Add a link to the description to launch a modal import form.
    $description = '<strong><a class="use-ajax" data-dialog-type="modal" data-dialog-options="{&quot;width&quot;:800}" href="';
    $path = '/ewp/hei/auto_import?modal';
    $description .= $path . '">';
    $description .= t('Click here to look up more Institutions');
    $description .= '</a></strong>';

    // Place the description in the element according to cardinality.
    if ($elements['#cardinality_multiple']) {
      $break = (!empty($elements['#description'])) ? '<br/>' : '';
      $elements['#description'] .= $break . $description;
    } else {
      $break = (!empty($elements[0]['target_id']['#description'])) ? '<br/>' : '';
      $elements[0]['target_id']['#description'] .= $break . $description;
    }
  }

}
